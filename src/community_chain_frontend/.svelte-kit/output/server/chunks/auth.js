import{AuthClient as d}from"@dfinity/auth-client";import{HttpAgent as p,Actor as g}from"@dfinity/agent";import{d as s,w as l}from"./index.js";const A=({IDL:t})=>{const e=t.Record({id:t.Text,status:t.Text,reward:t.Nat,assignee:t.Opt(t.Principal),title:t.Text,creator:t.Principal,description:t.Text,created_at:t.Int,location:t.Text});return t.Service({applyForActivity:t.Func([t.Text],[t.Bool],[]),completeActivity:t.Func([t.Text],[t.Bool],[]),createActivity:t.Func([t.Text,t.Text,t.Text,t.Nat],[t.Text],[]),getActivity:t.Func([t.Text],[t.Opt(e)],["query"]),getMyAssignedActivities:t.Func([],[t.Vec(e)],["query"]),getMyCreatedActivities:t.Func([],[t.Vec(e)],["query"]),listActivities:t.Func([],[t.Vec(e)],["query"])})},o=process.env.CANISTER_ID_COMMUNITY_CHAIN_BACKEND,r=(t,e={})=>{const a=e.agent||new p({...e.agentOptions});return e.agent&&e.agentOptions&&console.warn("Detected both agent and agentOptions passed to createActor. Ignoring agentOptions and proceeding with the provided agent."),process.env.DFX_NETWORK!=="ic"&&a.fetchRootKey().catch(i=>{console.warn("Unable to fetch root key. Check to ensure that your local replica is running"),console.error(i)}),g.createActor(A,{agent:a,canisterId:t,...e.actorOptions})};o&&r(o);const n=l({isAuthenticated:!1,identity:null,principal:null,isInitialized:!1}),y=l(null),E=s(n,t=>t.isAuthenticated),N=s(n,t=>t.isInitialized),h=()=>"ficb4-4iaaa-aaaag-at7rq-cai",T=async()=>{try{console.log("Starting auth initialization...");const t=await d.create(),e=h();console.log("Debug Canister ID:",e);let a;if(await t.isAuthenticated()){const i=t.getIdentity(),c=i.getPrincipal();a=r(e,{agentOptions:{identity:i}}),n.update(u=>({...u,isAuthenticated:!0,identity:i,principal:c.toString(),isInitialized:!0})),console.log("Auth initialized with identity")}else{const i=t.getIdentity();a=r(e,{agentOptions:{identity:i}}),n.update(c=>({...c,isAuthenticated:!1,isInitialized:!0})),console.log("Auth initialized anonymously")}return y.set(a),!0}catch(t){return console.error("Auth initialization failed:",t),n.update(e=>({...e,isInitialized:!0})),!1}};T().catch(t=>{console.error("Failed to initialize auth on startup:",t)});export{E as a,n as b,N as i};
